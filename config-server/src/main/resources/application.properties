spring.application.name=config-server
server.port=8888
#########################
#myGit
#https://github.com/cyl5yy412/config-repo
#windows
#file:///${user.home}/config-repo
#########################{}占位符
#Spring Cloud Config Server支持git库URL中包含针对{application}和 {profile}的占位符(如果你需要,{label}也可包含占位符, \
#  不过要牢记的是任何情况下label只指git的label).所以,你可以很容易的支持"一个应用系统一个配置库"策略(举例):
#spring.cloud.config.server.git.uri= https://github.com/myorg/{application}
#########################
#在Config Server中设置"spring.cloud.config.server.git.uri"配置项的值(e.g. 如在 application.yml文件中).\
#  如果你设置这个属性使用 file:前缀,Config Server 是从本地配置库中取数据,\
#  这种方式可以不使用Git的情况下,快速和简单的运行起来,但是这种情况下,\
#  Config Server不通过Clone Git配置库直接操作本地库(如果本地配置库不为空,也不用担心,\
#  因为Config Server不会把变更推送到"remote"库中). 为了增强Config Server 的高可靠性,需要按比例增加Config Server的数量,\
#  这时候需要让所有的Config Server 实例指向相同的配置库,此种情况下只能有一个共享的文件系统才能很好的运行.\
#  即使在这种情况下,最好还是使用ssh: 协议来访问共享文件系统库,以便让服务器能够克隆Git库并可以让本地工作副本当作缓存来使用.
#spring.cloud.config.server.git.uri=https://github.com/${user.home}//config-repo/
#spring.cloud.config.server.git.uri=file://${user.home}/config-repo
spring.cloud.config.server.git.uri=https://github.com/forezp/SpringcloudConfig/
spring.cloud.config.server.git.searchPaths=respo
spring.cloud.config.label=master
spring.cloud.config.server.git.username=
spring.cloud.config.server.git.password=
#########################
############################################################
#{application} maps to "spring.application.name" on the client side;
#
#{profile} maps to "spring.profiles.active" on the client (comma separated list); and
#
#{label} which is a server side feature labelling a "versioned" set of config files.
#
#{application} 对应客户端的"spring.application.name"属性;
#
#{profile} 对应客户端的 "spring.profiles.active"属性(逗号分隔的列表); 和
#
#{label} 对应服务端属性,这个属性能标示一组配置文件的版本.
############################################################
#spring.cloud.config.server.git.uri：配置git仓库地址
#spring.cloud.config.server.git.searchPaths：配置仓库路径
#spring.cloud.config.label：配置仓库的分支
#spring.cloud.config.server.git.username：访问git仓库的用户名
#spring.cloud.config.server.git.password：访问git仓库的用户密码
#如果Git仓库为公开仓库，可以不填写用户名和密码，如果是私有仓库需要填写，本例子是公开仓库，放心使用。
#
#远程仓库https://github.com/forezp/SpringcloudConfig/ 中有个文件config-client-dev.properties文件中有一个属性：
#
#foo = foo version 3
#
#启动程序：访问http://localhost:8888/foo/dev
#
#{"name":"foo","profiles":["dev"],"label":"master",
#"version":"792ffc77c03f4b138d28e89b576900ac5e01a44b","state":null,"propertySources":[]}
#
#证明配置服务中心可以从远程程序获取配置信息。
#
#http请求地址和资源文件映射如下:
#
#/{application}/{profile}[/{label}]
#/{application}-{profile}.yml
#/{label}/{application}-{profile}.yml
#/{application}-{profile}.properties
#/{label}/{application}-{profile}.properties
############################################################
#########################通配符表达式:*
#spring:
#cloud:
#config:
#server:
#git:
#uri:https://github.com/spring-cloud-samples/config-repo
#repos:
#simple:https://github.com/simple/config-repo
#special:
#pattern:special*/dev*,*special*/dev*
#uri:https://github.com/special/config-repo
#local:
#pattern:local*
#uri:file:/home/configsvc/config-repo